#!/bin/bash

# Default values
AFTER=""
BEFORE=""
COMMAND="list"
USERNAME=""
LOGS=""
CURRENCIES=()

PROFIT=${XTF_PROFIT:-20}

# Parse options
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h | --help )
            echo "Usage: xtf [-h|--help] [FILTR] [PŘÍKAZ] UŽIVATEL LOG [LOG2 [...]]"
            echo "Options:"
            echo "  -h, --help          Display this help message"
            echo "  -a, --after DATETIME         Filter records after DATETIME"
            echo "  -b, --before DATETIME         Filter records before DATETIME"
            echo "  -c, --currency CURRENCY         Filter records by currency"
            exit 0
        ;;
        -a | --after )
            AFTER+="$2"
            shift 2
        ;;
        -b | --before )
            BEFORE+="$2"
            shift 2
        ;;
        -c | --currency )
            CURRENCIES+=("$2")
            shift 2
        ;;
        -*)
            echo "Error: Unknown option: $1" >&2
            exit 1
        ;;
        *)
            break
        ;;
    esac
done

# Extracting the rest of the arguments
if [ $# -ge 3 ]; then
    COMMAND=$1
    USERNAME=$2
    shift 2
    LOGS="$@"
    elif [ $# -eq 2 ]; then
    USERNAME=$1
    shift
    LOGS="$1"
    elif [ $# -eq 1 ]; then
    USERNAME=$1
else
    echo "Error: Insufficient arguments." >&2
    exit 1
fi





case "$COMMAND" in
    list | list-currency | status | profit)
        awk -F';' -v bfr="$BEFORE" -v afr="$AFTER" -v curs="${CURRENCIES[*]}" -v com=$COMMAND -v user=$USERNAME -v prof=$PROFIT \
        'function convdate(date){
            if (date ~ /^[0-9]{4}-[0-9]{2}-[0-9]{2}$/) {
                gsub(/[-]/, "", date);
                date = date "000000";  # Přidej výchozí čas (půlnoc)
            }
            # Pokud je formát YYYY-MM-DD HH:MM::SS
            else if (date ~ /^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$/) {
                gsub(/[-: ]/, "", date);
            }
            return date;
        }
        {
        n = split(curs, arr, " ");
        for (i = 1; i <= n; i++) {
            cur[arr[i]] = 1
            }
        if(user==$1 && (!bfr || convdate(bfr) > convdate($2)) && (!afr || convdate(afr) < convdate($2)) && length($3) == 3){
            if(com=="list-currency") {
                print $3
                } else if(com=="list") {
                    if($3 in cur || n==0) print
                } else {
                    if($3 in usr_cur){
                        usr_cur[$3] = usr_cur[$3]+$4;
                    } else if($3 in cur || n==0){
                        usr_cur[$3] = $4;
                    }
                }
            }
        } END {
            for(key in usr_cur){
                printf "%s : %.4f\n", key, usr_cur[key] * (1+((com=="profit" && usr_cur[key] > 0)? (prof/100.0):0));
            }
        }' log.txt | uniq
    ;;
    *)
        echo "Error: Unknown command: $COMMAND" >&2
        exit 1
    ;;
esac